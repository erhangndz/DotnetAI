
@model List<ChatMessagesDto>
@{
    ViewData["Title"] = "Open AI Chat";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<style>
    #chat-container {
        border: 1px solid #ccc;
        border-radius: 8px;
        padding: 15px;
        height: 60vh;
        overflow-y: auto;
        display: flex;
        flex-direction: column;
        margin-bottom: 15px;
    }

    .chat-message {
        padding: 8px 12px;
        border-radius: 18px;
        margin-bottom: 10px;
        max-width: 70%;
        word-wrap: break-word;
    }

    .user-message {
        background-color: #007bff;
        color: white;
        align-self: flex-end; /* Kullanıcı mesajları sağa yaslı */
    }

    .bot-message {
        background-color: #f1f1f1;
        color: black;
        align-self: flex-start; /* Bot mesajları sola yaslı */
    }

    .loading-indicator {
        align-self: flex-start;
        font-style: italic;
        color: #888;
    }
</style>

<div id="chat-container">
    @if (Model != null)
    {
        foreach (var message in Model)
        {
            var messageClass = message.Author == "User" ? "user-message" : "bot-message";
            <div class="chat-message @messageClass">
                @message.Content
            </div>
        }
    }
</div>

<form id="chat-form">
    <div class="input-group">
        <input type="text" id="prompt-input" class="form-control" placeholder="Mesajınızı yazın..." autocomplete="off" />
        <div class="input-group-append">
            <button type="submit" class="btn btn-primary">Gönder</button>
        </div>
    </div>
</form>


    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const chatForm = document.getElementById("chat-form");
            const promptInput = document.getElementById("prompt-input");
            const chatContainer = document.getElementById("chat-container");

            // Konuşma penceresini en alta kaydır
            function scrollToBottom() {
                chatContainer.scrollTop = chatContainer.scrollHeight;
            }

            // Başlangıçta en alta kaydır
            scrollToBottom();

            // UI'a yeni mesaj ekleyen fonksiyon
            function addMessageToUI(author, content) {
                const messageClass = author === "User" ? "user-message" : "bot-message";
                const messageDiv = document.createElement("div");
                messageDiv.className = `chat-message ${messageClass}`;
                messageDiv.textContent = content;
                chatContainer.appendChild(messageDiv);
                scrollToBottom();
                return messageDiv;
            }


            chatForm.addEventListener("submit", async function (event) {
                event.preventDefault(); // Formun sayfayı yeniden yüklemesini engelle

                const userMessage = promptInput.value.trim();
                if (userMessage === "") {
                    return;
                }

                // 1. Kullanıcının mesajını anında UI'a ekle
                addMessageToUI("User", userMessage);
                promptInput.value = ""; // Input'u temizle

                // 2. "Yazıyor..." göstergesi ekle
                const loadingIndicator = addMessageToUI("Bot", "Yazıyor...");
                loadingIndicator.classList.add("loading-indicator");

                try {
                    // 3. Sunucuya AJAX isteği gönder
                    const response = await fetch('@Url.Action("SendMessage", "OpenAIChat")', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                          
                        },
                        body: JSON.stringify({ prompt: userMessage })
                    });

                    if (!response.ok) {
                        throw new Error(`HTTP error! status: ${response.status}`);
                    }

                    const botMessage = await response.json();

                    // 4. "Yazıyor..." göstergesini bot'un gerçek cevabıyla güncelle
                    loadingIndicator.textContent = botMessage.content;
                    loadingIndicator.classList.remove("loading-indicator");

                } catch (error) {
                    console.error("Mesaj gönderilirken hata oluştu:", error);
                    loadingIndicator.textContent = "Bir hata oluştu. Lütfen tekrar deneyin.";
                    loadingIndicator.style.color = 'red';
                } finally {
                    scrollToBottom();
                }
            });
        });
    </script>

